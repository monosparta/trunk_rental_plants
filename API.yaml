openapi: 3.0.0
info:
  description: 會員植物管理系統
  version: 0.0.0
  title: Plant Manager
tags:
  - name: user
    description: 使用者 API
  - name: admin
    description: 管理員 API
paths:
  /user:
    get:
      tags:
        - user
      summary: Get User from token
      security:
        - auth: []
          authMethod: []
      responses:
        '200':
          description: Query Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid header"
        '401':
          description: Invalid JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid JWT token"
  /user/login:
    post:
      tags:
        - user
      summary: Login
      requestBody:
        $ref: '#/components/requestBodies/auth'
      responses:
        '200':
          description: Login success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessResponse'
              example:
                message: "Login success"
        '400':
          description: Invalid body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid body"
        '401':
          description: Invalid user or password!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid user or password!"
  /user/register:
    post:
      tags:
        - user
      summary: Register
      requestBody:
        $ref: "#/components/requestBodies/userRegister"
      responses:
        '200':
          description: Registration success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Registration success"
        '400':
          description: Invalid body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid body"
        '404':
          description: Registration failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Membership not found"
        '409':
          description: User already exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "User already exist"
  /user/password:
    post:
      tags:
        - user
      summary: Reset Password Request
      requestBody:
        $ref: "#/components/requestBodies/userRegister"
      responses:
        '200':
          description: Request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Request success"
        '400':
          description: Invalid body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid body"
        '404':
          description: Unknown User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "User not found"

    put:
      tags:
        - user
      summary: Change the password
      security:
        - auth: []
          authMethod: []
      requestBody:
        content:
          application/json:
              schema:
                properties:
                  password:
                    type: string
      responses:
        '200':
          description: Password updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Password updated"
        '400':
          description: Invalid header/body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid header/body"
        '401':
          description: Invalid JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid JWT token"
  /rent/list/others:
    get:
      tags:
        - user
      summary: Get other user's plant information
      security:
        - auth: []
          authMethod: []
      responses:
        '200':
          description: Send other's information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OtherUserPlantResponse'
        '400':
          description: Invalid header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid header"
        '401':
          description: Invalid JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid JWT token"
  /rent/register:
    post:
      tags:
        - user
      summary: Rent registration
      security:
        - auth: []
          authMethod: []
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Registration successful"
        # '403':
        #   description: Registration failed
        '400':
          description: Invalid header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid header"
        '401':
          description: Invalid JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid JWT token"
  /rent/plantInfo:
    post:
      tags:
        - user
      summary: Add plant information
      security:
        - auth: []
          authMethod: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                rent:
                  type: integer
                  format: int32
                name:
                  type: string
                intro:
                  type: string
                imgPath:
                  type: string
                  format: binary
                nickname:
                  type: string
                minHumid:
                  type: integer
                  format: int32
      responses:
        '200':
          description: Update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Update successful"
        '400':
          description: Invalid header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid header"
        '401':
          description: Invalid JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid JWT token"
        '404':
          description: Requested rent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Requested rent not found"
        '409':
          description: Plant already exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Plant already exist"
  /admin/rentedInfo:
    get:
      tags:
        - admin
      summary: Get rented list
      security:
        - auth: []
          authMethod: []
      responses:
        '200':
          description: Query Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AdminRent'
                        # id:
                        #   type: integer
                        # name: 
                        #   type: string
                        # email:
                        #   type: string
                        # plantName:
                        #   type: string
                        # imgPath:
                        #   type: string
                        # humid:
                        #   type: number
                        # light:
                        #   type: integer
        '400':
          description: Invalid header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid header"
        '401':
          description: Invalid JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid JWT token"
        '403':
          description: Permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Permission denied"

  /admin/waitList:
    get:
      tags:
        - admin
      summary: Get rents waiting for container
      security:
        - auth: []
          authMethod: []
      responses:
        '200':
          description: Query Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties: 
                        name: 
                          type: string
                        email:
                          type: string
        '400':
          description: Invalid header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid header"
        '401':
          description: Invalid JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid JWT token"
        '404':
          description: Rent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Rent not found"
  /admin/rentedAmount:
    get:
      tags:
        - admin
      summary: Get rented amount
      security:
        - auth: []
          authMethod: []
      responses:
        '200':
          description: Query Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties: 
                      rented: 
                        type: integer
                      remain:
                        type: integer
        '400':
          description: Invalid header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid header"
        '401':
          description: Invalid JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid JWT token"
        '403':
          description: Permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Permission denied"
  '/admin/rent/{rentId}':
    delete:
      tags:
        - admin
      summary: Remove rent by id
      security:
        - auth: []
          authMethod: []
      parameters:
      - name: rentId
        in: path
        description: ID of rent
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Delete successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Delete successful"
        '400':
          description: Invalid header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid header"
        '401':
          description: Invalid JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Invalid JWT token"
        '403':
          description: Permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Permission denied"
        '404':
          description: Rent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
              example:
                message: "Rent not found"

# servers
servers:
  - url: http://192.168.168.83:3000/api
  - url: http://192.168.56.100:3000/api

# components
components:
  securitySchemes:
    auth:
      type: apiKey
      in: header
      name: Auth
    authMethod:
      type: apiKey
      in: header
      name: Auth-Method
  requestBodies:
    auth:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthRequest'
      description: 登入資訊
      required: true
    userRegister:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRegisterRequest'
      description: 註冊資訊
      required: true
  schemas:

    # data
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        isDefaultPassword:
          type: boolean
        role:
          type: integer
    Rent:
      type: object
      properties:
        plant:
          $ref: '#/components/schemas/Plant'
        container:
          type: integer
          format: int32
    AdminRent:
      type: object
      properties:
        id:
          type: integer
          format: int32
        owner:
          $ref: '#/components/schemas/User'
        plant:
          $ref: '#/components/schemas/Plant'
        container:
          type: integer
          format: int32
    Plant:
      type: object
      properties:
        name:
          type: string
        intro:
          type: string
        imgPath:
          type: string
        nickName:
          type: string
        minHumid:
          type: integer
          format: int32

    # request
    AuthRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    UserRegisterRequest:
      type: object
      properties:
        email:
          type: string


    # response
    LoginSuccessResponse:
      type: object
      properties:
        message:
          type: string
        token:
          type: string
        user:
          $ref: '#/components/schemas/User'
        rents:
          type: array
          items:
            $ref: '#/components/schemas/Rent'
    GenericResponse:
      type: object
      properties:
        message:
          type: string
    UserResponse:
      type: object
      properties:
        message:
          type: string
        user:
          $ref: '#/components/schemas/User'
        rents:
          type: array
          items:
            $ref: '#/components/schemas/Rent'
    OtherUserPlantResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Rent'



